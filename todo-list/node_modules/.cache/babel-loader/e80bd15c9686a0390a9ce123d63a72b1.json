{"ast":null,"code":"var _jsxFileName = \"/Users/ice/typescript/todo-list/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport TodoTask from './Components/TodoTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // function App() {\n  const [task, setTask] = useState(\"\");\n  const [deadline, setDeadline] = useState(0);\n  const [todoList, setTodoList] = useState([]);\n\n  const handleChange = e => {\n    if (e.target.name === \"task\") {\n      setTask(e.target.value);\n    } else {\n      setDeadline(+e.target.value);\n    }\n  };\n\n  const addTask = () => {\n    const newTask = {\n      taskName: task,\n      deadline: deadline\n    };\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n    setDeadline(0);\n    console.log(todoList);\n  };\n\n  const completeTask = taskNameToDelete => {\n    setTodoList(todoList.filter(task => {\n      return task.taskName != taskNameToDelete;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task...\",\n          name: \"task\",\n          value: task,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Deadline (in Days)...\",\n          name: \"deadline\",\n          value: deadline,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: todoList.map((task, key) => {\n        return /*#__PURE__*/_jsxDEV(TodoTask, {\n          task: task,\n          completeTask: completeTask\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JCC64xbpxY4n7qevg8qGt8xSwFY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ice/typescript/todo-list/src/App.tsx"],"names":["React","useState","TodoTask","App","task","setTask","deadline","setDeadline","todoList","setTodoList","handleChange","e","target","name","value","addTask","newTask","taskName","console","log","completeTask","taskNameToDelete","filter","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAA+C,OAA/C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAIA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AACtB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAS,CAAT,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAU,EAAV,CAAxC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAA2C;AAC9D,QAAGA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,MAArB,EAA6B;AAC3BR,MAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASE,KAAV,CAAP;AACD,KAFD,MAEO;AACLP,MAAAA,WAAW,CAAC,CAACI,CAAC,CAACC,MAAF,CAASE,KAAX,CAAX;AACD;AACF,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAW;AACzB,UAAMC,OAAO,GAAG;AAACC,MAAAA,QAAQ,EAAEb,IAAX;AAAiBE,MAAAA,QAAQ,EAAEA;AAA3B,KAAhB;AACAG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,OAAd,CAAD,CAAX;AACAX,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,GAND;;AAQA,QAAMY,YAAY,GAAIC,gBAAD,IAAoC;AACvDZ,IAAAA,WAAW,CAACD,QAAQ,CAACc,MAAT,CAAiBlB,IAAD,IAAU;AACpC,aAAOA,IAAI,CAACa,QAAL,IAAiBI,gBAAxB;AACD,KAFW,CAAD,CAAX;AAGD,GAJD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACH;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,WAAW,EAAC,SAFZ;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEjB,IAJP;AAKA,UAAA,QAAQ,EAAEM;AALV;AAAA;AAAA;AAAA;AAAA,gBADG,eAOH;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,WAAW,EAAC,uBAFZ;AAGA,UAAA,IAAI,EAAC,UAHL;AAIA,UAAA,KAAK,EAAEJ,QAJP;AAKA,UAAA,QAAQ,EAAEI;AALV;AAAA;AAAA;AAAA;AAAA,gBAPG;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeC;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAkBC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGP,QAAQ,CAACe,GAAT,CAAa,CAACnB,IAAD,EAAaoB,GAAb,KAA6B;AACzC,4BAAO,QAAC,QAAD;AAAoB,UAAA,IAAI,EAAEpB,IAA1B;AAAgC,UAAA,YAAY,EAAEgB;AAA9C,WAAeI,GAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvDD;;GAAMrB,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import React, {FC, ChangeEvent, useState} from 'react';\nimport './App.css';\nimport TodoTask from './Components/TodoTask';\nimport {ITask} from './Interfaces'\n\n\nconst App: FC = () => {\n// function App() {\n\nconst [task, setTask] = useState<string>(\"\")\nconst [deadline, setDeadline] = useState<number>(0)\nconst [todoList, setTodoList] = useState<ITask[]>([])\n\nconst handleChange = (e:ChangeEvent<HTMLInputElement>): void => {\n  if(e.target.name === \"task\") {\n    setTask(e.target.value)\n  } else {\n    setDeadline(+e.target.value)\n  }\n};\n\nconst addTask = ():void => {\n  const newTask = {taskName: task, deadline: deadline}\n  setTodoList([...todoList, newTask])\n  setTask(\"\");\n  setDeadline(0);\n  console.log(todoList)\n}\n\nconst completeTask = (taskNameToDelete: string): void => {\n  setTodoList(todoList.filter((task) => {\n    return task.taskName != taskNameToDelete\n  }))\n}\n\n  return (\n    <div className=\"App\">\n     <div className=\"header\">\n       <div className=\"inputContainer\"> \n    <input \n    type=\"text\" \n    placeholder=\"Task...\" \n    name=\"task\" \n    value={task}\n    onChange={handleChange}/>\n    <input \n    type=\"number\" \n    placeholder=\"Deadline (in Days)...\" \n    name=\"deadline\" \n    value={deadline}\n    onChange={handleChange} />\n    </div>\n      <button onClick={addTask}>Add Task</button>\n     </div>\n     <div className=\"todoList\">\n       {todoList.map((task:ITask, key: number) => {\n         return <TodoTask key={key} task={task} completeTask={completeTask}/>\n       })}\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}